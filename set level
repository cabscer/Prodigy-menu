javascript:(function(){ function dragElement(elmnt, dragHandle) { var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0; if (dragHandle) { dragHandle.onmousedown = dragMouseDown; } else { elmnt.onmousedown = dragMouseDown; } function dragMouseDown(e) { e = e || window.event; e.preventDefault(); pos3 = e.clientX; pos4 = e.clientY; document.onmouseup = closeDragElement; document.onmousemove = elementDrag; } function elementDrag(e) { e = e || window.event; e.preventDefault(); pos1 = pos3 - e.clientX; pos2 = pos4 - e.clientY; pos3 = e.clientX; pos4 = e.clientY; elmnt.style.top = (elmnt.offsetTop - pos2) + "px"; elmnt.style.left = (elmnt.offsetLeft - pos1) + "px"; elmnt.style.bottom = "auto"; elmnt.style.right = "auto"; elmnt.style.transform = "none"; } function closeDragElement() { document.onmouseup = null; document.onmousemove = null; } } var ui = document.createElement('div'); ui.id = 'draggableUI'; ui.style.cssText = 'position:fixed; bottom:10px; right:10px; background:#fff;border:1px solid #ccc;border-radius:5px;box-shadow:0 4px 8px rgba(0,0,0,0.2);z-index:1001; overflow: hidden;'; var dragBox = document.createElement('div'); dragBox.id = 'dragHandleBox'; dragBox.style.cssText = 'width: 100%; height: 30px; background: #000; cursor: move;'; ui.appendChild(dragBox); var content = document.createElement('div'); content.style.cssText = 'padding: 20px 20px 10px 20px;'; ui.appendChild(content); var title = document.createElement('h3'); title.textContent = 'Set Player Level'; title.style.cssText = 'margin-top: 0;'; content.appendChild(title); var input = document.createElement('input'); input.type = 'number'; input.min = '-99999999'; input.max = '99999999999999999999999999999999'; input.style.cssText = 'width:100%;padding:8px;border:1px solid #ccc;border-radius:4px;margin-bottom:10px;'; content.appendChild(input); var submit = document.createElement('button'); submit.textContent = 'Set Level'; submit.style.cssText = 'padding:10px 15px;background:green;color:white;border:none;border-radius:4px;cursor:pointer; margin-bottom: 10px;'; submit.onclick = function() { var level = parseInt(input.value); if (isNaN(level) || level < -99999999 || level > 99999999999999999999999999999999) { alert("Enter a valid number (-99999999-99,999,999,999,999,999,999,999,999,999,999)."); return; } function setLevel(lvl) { var player = Boot.prototype.game._state._current.user.source; var level_value = lvl; if (level_value === 1) { player.data.stars = 0; player.data.level = 1; player.getLevel = () => { return 1 }; Boot.prototype.game._state._current.user.source.data.level = level_value; Boot.prototype.game._state._current.user.source.getLevel = () => { return level_value }; return; } var i = level_value - 2; var xpConstant = 1.042; player.data.stars = Math.round((1 - Math.pow(xpConstant, i)) / (1 - xpConstant) * 20 + 10); player.data.level = +level_value; Boot.prototype.game._state._current.user.source.data.level = level_value; Boot.prototype.game._state._current.user.source.getLevel = () => { return level_value }; } setLevel(level); var source = Boot.prototype.game._state._current.user.source; source.data.stars += eval(source.getStarsToLevel()); source.processStars(); source.saveEnabled = true; source.forceSaveCharacter(); }; content.appendChild(submit); var footer = document.createElement('div'); footer.textContent = 'Made by Cabscer on GitHub'; footer.style.cssText = 'font-size: 10px; color: #000; text-align: center; padding: 5px; border-top: 1px solid #eee;'; ui.appendChild(footer); document.body.appendChild(ui); dragElement(ui, dragBox); })();
